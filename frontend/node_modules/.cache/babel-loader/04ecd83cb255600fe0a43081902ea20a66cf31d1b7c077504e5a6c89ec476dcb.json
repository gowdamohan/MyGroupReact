{"ast":null,"code":"import _objectSpread from\"D:/MyGroupReact/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from'react';export function useApi(apiCall){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{immediate:true};const[state,setState]=useState({data:null,loading:false,error:null});const execute=async()=>{setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:true,error:null}));try{const response=await apiCall();setState({data:response.data,loading:false,error:null});}catch(error){var _error$response,_error$response$data;setState({data:null,loading:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message||'An error occurred'});}};useEffect(()=>{if(options.immediate){execute();}},[]);return _objectSpread(_objectSpread({},state),{},{refetch:execute});}export function useApiMutation(apiCall){const[state,setState]=useState({data:null,loading:false,error:null});const mutate=async params=>{setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:true,error:null}));try{const response=await apiCall(params);setState({data:response.data,loading:false,error:null});}catch(error){var _error$response2,_error$response2$data;setState({data:null,loading:false,error:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message||'An error occurred'});throw error;// Re-throw so calling code can handle\n}};return _objectSpread({mutate},state);}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}