{"ast":null,"code":"var _jsxFileName = \"D:\\\\MyGroupReact\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const isAuthenticated = !!user;\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const userData = await authAPI.getCurrentUser();\n          setUser(userData.user);\n          setProfile(userData.profile || null);\n        } catch (error) {\n          console.error('Failed to get current user:', error);\n          localStorage.removeItem('token');\n        }\n      }\n      setIsLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n\n      // Fetch complete profile\n      try {\n        const userData = await authAPI.getCurrentUser();\n        setProfile(userData.profile || null);\n      } catch (profileError) {\n        console.error('Failed to fetch user profile:', profileError);\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async data => {\n    try {\n      const response = await authAPI.register(data);\n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n      setProfile(null);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      setUser(null);\n      setProfile(null);\n    }\n  };\n  const updateUser = (newUser, newProfile) => {\n    setUser(newUser);\n    if (newProfile !== undefined) {\n      setProfile(newProfile);\n    }\n  };\n  const value = {\n    user,\n    profile,\n    isAuthenticated,\n    isLoading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"v3heGBIg3RTH6FyqKlMNqwnTPbY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","profile","setProfile","isLoading","setIsLoading","isAuthenticated","initializeAuth","token","localStorage","getItem","userData","getCurrentUser","error","console","removeItem","login","email","password","response","setItem","profileError","register","data","logout","updateUser","newUser","newProfile","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MyGroupReact/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, UserProfile } from '../types';\nimport { authAPI } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  profile: UserProfile | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (data: any) => Promise<void>;\n  logout: () => Promise<void>;\n  updateUser: (user: User, profile?: UserProfile) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [profile, setProfile] = useState<UserProfile | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const isAuthenticated = !!user;\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const userData = await authAPI.getCurrentUser();\n          setUser(userData.user);\n          setProfile(userData.profile || null);\n        } catch (error) {\n          console.error('Failed to get current user:', error);\n          localStorage.removeItem('token');\n        }\n      }\n      setIsLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await authAPI.login({ email, password });\n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n      \n      // Fetch complete profile\n      try {\n        const userData = await authAPI.getCurrentUser();\n        setProfile(userData.profile || null);\n      } catch (profileError) {\n        console.error('Failed to fetch user profile:', profileError);\n      }\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (data: any) => {\n    try {\n      const response = await authAPI.register(data);\n      localStorage.setItem('token', response.token);\n      setUser(response.user);\n      setProfile(null);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      setUser(null);\n      setProfile(null);\n    }\n  };\n\n  const updateUser = (newUser: User, newProfile?: UserProfile) => {\n    setUser(newUser);\n    if (newProfile !== undefined) {\n      setProfile(newProfile);\n    }\n  };\n\n  const value = {\n    user,\n    profile,\n    isAuthenticated,\n    isLoading,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}