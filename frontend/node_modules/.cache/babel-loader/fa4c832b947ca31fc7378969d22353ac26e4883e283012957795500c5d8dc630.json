{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: async credentials => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n  register: async data => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n  logout: async () => {\n    await api.post('/auth/logout');\n    localStorage.removeItem('token');\n  }\n};\n\n// Users API\nexport const usersAPI = {\n  getProfile: async () => {\n    const response = await api.get('/users/profile');\n    return response.data;\n  },\n  updateProfile: async data => {\n    const response = await api.put('/users/profile', data);\n    return response.data;\n  },\n  changePassword: async data => {\n    const response = await api.put('/users/change-password', data);\n    return response.data;\n  },\n  getAllUsers: async (page = 1, limit = 10) => {\n    const response = await api.get(`/users?page=${page}&limit=${limit}`);\n    return response.data;\n  }\n};\n\n// Geographic API\nexport const geographicAPI = {\n  getCountries: async () => {\n    const response = await api.get('/geographic/countries');\n    return response.data;\n  },\n  getStates: async countryId => {\n    const response = await api.get(`/geographic/states/${countryId}`);\n    return response.data;\n  },\n  getDistricts: async stateId => {\n    const response = await api.get(`/geographic/districts/${stateId}`);\n    return response.data;\n  }\n};\n\n// Groups API\nexport const groupsAPI = {\n  getAllGroups: async (page = 1, limit = 10, search = '') => {\n    const response = await api.get(`/groups?page=${page}&limit=${limit}&search=${search}`);\n    return response.data;\n  },\n  getGroupById: async id => {\n    const response = await api.get(`/groups/${id}`);\n    return response.data;\n  },\n  createGroup: async data => {\n    const response = await api.post('/groups', data);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","data","register","getCurrentUser","get","logout","usersAPI","getProfile","updateProfile","put","changePassword","getAllUsers","page","limit","geographicAPI","getCountries","getStates","countryId","getDistricts","stateId","groupsAPI","getAllGroups","search","getGroupById","id","createGroup"],"sources":["D:/MyGroupReact/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosResponse, AxiosError } from 'axios';\nimport {\n  User,\n  UserProfile,\n  Country,\n  State,\n  District,\n  Group,\n  AuthResponse,\n  LoginCredentials,\n  RegisterData,\n  ProfileUpdateData,\n  ChangePasswordData,\n  PaginatedResponse\n} from '../types';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE || 'http://localhost:5000/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  (error: AxiosError) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: async (credentials: LoginCredentials): Promise<AuthResponse> => {\n    const response = await api.post('/auth/login', credentials);\n    return response.data;\n  },\n\n  register: async (data: RegisterData): Promise<AuthResponse> => {\n    const response = await api.post('/auth/register', data);\n    return response.data;\n  },\n\n  getCurrentUser: async (): Promise<{ user: User; profile?: UserProfile }> => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n\n  logout: async (): Promise<void> => {\n    await api.post('/auth/logout');\n    localStorage.removeItem('token');\n  },\n};\n\n// Users API\nexport const usersAPI = {\n  getProfile: async (): Promise<{ user: User; profile?: UserProfile }> => {\n    const response = await api.get('/users/profile');\n    return response.data;\n  },\n\n  updateProfile: async (data: ProfileUpdateData): Promise<{ message: string }> => {\n    const response = await api.put('/users/profile', data);\n    return response.data;\n  },\n\n  changePassword: async (data: ChangePasswordData): Promise<{ message: string }> => {\n    const response = await api.put('/users/change-password', data);\n    return response.data;\n  },\n\n  getAllUsers: async (page = 1, limit = 10): Promise<PaginatedResponse<User>> => {\n    const response = await api.get(`/users?page=${page}&limit=${limit}`);\n    return response.data;\n  },\n};\n\n// Geographic API\nexport const geographicAPI = {\n  getCountries: async (): Promise<Country[]> => {\n    const response = await api.get('/geographic/countries');\n    return response.data;\n  },\n\n  getStates: async (countryId: number): Promise<State[]> => {\n    const response = await api.get(`/geographic/states/${countryId}`);\n    return response.data;\n  },\n\n  getDistricts: async (stateId: number): Promise<District[]> => {\n    const response = await api.get(`/geographic/districts/${stateId}`);\n    return response.data;\n  },\n};\n\n// Groups API\nexport const groupsAPI = {\n  getAllGroups: async (page = 1, limit = 10, search = ''): Promise<PaginatedResponse<Group>> => {\n    const response = await api.get(`/groups?page=${page}&limit=${limit}&search=${search}`);\n    return response.data;\n  },\n\n  getGroupById: async (id: number): Promise<Group> => {\n    const response = await api.get(`/groups/${id}`);\n    return response.data;\n  },\n\n  createGroup: async (data: Partial<Group>): Promise<{ message: string; group: Group }> => {\n    const response = await api.post('/groups', data);\n    return response.data;\n  },\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}