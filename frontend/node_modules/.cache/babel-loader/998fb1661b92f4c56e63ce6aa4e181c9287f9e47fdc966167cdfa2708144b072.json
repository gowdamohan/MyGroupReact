{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authAPI}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[profile,setProfile]=useState(null);const[isLoading,setIsLoading]=useState(true);const isAuthenticated=!!user;useEffect(()=>{const initializeAuth=async()=>{const token=localStorage.getItem('token');if(token){try{const userData=await authAPI.getCurrentUser();setUser(userData.user);setProfile(userData.profile||null);}catch(error){console.error('Failed to get current user:',error);localStorage.removeItem('token');}}setIsLoading(false);};initializeAuth();},[]);const login=async(email,password)=>{try{const response=await authAPI.login({email,password});localStorage.setItem('token',response.token);setUser(response.user);// Fetch complete profile\ntry{const userData=await authAPI.getCurrentUser();setProfile(userData.profile||null);}catch(profileError){console.error('Failed to fetch user profile:',profileError);}}catch(error){throw error;}};const register=async data=>{try{const response=await authAPI.register(data);localStorage.setItem('token',response.token);setUser(response.user);setProfile(null);}catch(error){throw error;}};const logout=async()=>{try{await authAPI.logout();}catch(error){console.error('Logout error:',error);}finally{localStorage.removeItem('token');setUser(null);setProfile(null);}};const updateUser=(newUser,newProfile)=>{setUser(newUser);if(newProfile!==undefined){setProfile(newProfile);}};const value={user,profile,isAuthenticated,isLoading,login,register,logout,updateUser};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}